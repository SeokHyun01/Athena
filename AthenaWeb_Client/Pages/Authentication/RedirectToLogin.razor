@inject NavigationManager _navigationManager


@if (notAuthorized)
{
	<div>
		<p>로그인이 필요한 페이지입니다.</p>
	</div>
}


@code {
	[CascadingParameter]
	public Task<AuthenticationState> _authState { get; set; }

	bool notAuthorized { get; set; } = false;


	protected override async Task OnInitializedAsync()
	{
		var authState = await _authState;

		if (authState?.User?.Identity is null || !authState.User.Identity.IsAuthenticated)
		{
			var returnUrl = _navigationManager.ToBaseRelativePath(_navigationManager.Uri);
			if (string.IsNullOrEmpty(returnUrl))
			{
				_navigationManager.NavigateTo("login");
			}
			else
			{
				_navigationManager.NavigateTo($"login?returnUrl={returnUrl}");
			}
		}
		else
		{
			notAuthorized = true;
		}
	}
}